secrets:
  # These secrets are used by Authelia
  JWT_SECRET:
    file: ${SECRETS_DIR}/JWT_SECRET
  SESSION_SECRET:
    file: ${SECRETS_DIR}/SESSION_SECRET
  STORAGE_ENCRYPTION_KEY:
    file: ${SECRETS_DIR}/STORAGE_ENCRYPTION_KEY
  # These secrets are for using Authelia as an OIDC provider
  HMAC_SECRET:
    file: ${SECRETS_DIR}/HMAC_SECRET
  JWT_PRIVATE_KEY:
    file: ${SECRETS_DIR}/authelia-certs/private.pem
  DEX_CLIENT_SECRET_DIGEST:
    file: ${SECRETS_DIR}/DEX_CLIENT_SECRET_DIGEST

services:
  traefik:
    container_name: traefik
    image: traefik:latest
    user: "${USERID}:${GROUPID}"
    environment:
      HTTPS_METHOD: ${HTTPS_METHOD}
      TRAEFIK_ENABLE_DASHBOARD: ${TRAEFIK_ENABLE_DASHBOARD}
      DEFAULT_EMAIL: ${DEFAULT_EMAIL}
      GRIST_DOMAIN: ${GRIST_DOMAIN}

    ports:
      # HTTP Ports
      - "80:80"
      - "443:443"
      # The Web UI (enabled by TRAEFIK_ENABLE_DASHBOARD)
      - "8080:8080"
    entrypoint:
      - /settings/entrypoint.sh
    volumes:
      - ./config/traefik:/settings
      - ${SECRETS_DIR}/acme:/acme
      - ${SECRETS_DIR}/traefik-certs:/certs

  grist:
    container_name: grist
    image: gristlabs/grist:latest
    user: "${USERID}:${GROUPID}"
    environment:
      APP_HOME_URL: ${APP_HOME_URL}
      GRIST_SANDBOX_FLAVOR: gvisor

      GRIST_OIDC_IDP_ISSUER: '${APP_HOME_URL}/dex'
      GRIST_OIDC_IDP_CLIENT_ID: '${GRIST_OIDC_IDP_CLIENT_ID}'
      GRIST_OIDC_IDP_CLIENT_SECRET: '${GRIST_OIDC_IDP_CLIENT_SECRET}'
      GRIST_OIDC_IDP_END_SESSION_ENDPOINT: '${APP_HOME_URL}/authelia'

      # Working with multiple teams is possible but a little harder to
      # explain and understand, and the UI has rough edges.
      GRIST_SINGLE_ORG: ${TEAM}
      GRIST_DEFAULT_EMAIL: ${DEFAULT_EMAIL}

      # Node requires this in order to accept our manually-provided or
      # self-signed certs
      NODE_EXTRA_CA_CERTS: /etc/ssl/certs/ca-certificates.crt
    env_file:
      - path: "${PERSIST_DIR}/grist-env"
        required: false
    restart: always
    volumes:
      # Where to store persistent data, such as documents.
      - ${PERSIST_DIR}/grist:/persist
      - ${SECRETS_DIR}/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt
    depends_on:
      dex:
        condition: service_healthy
    # In order for internal OIDC requests to work regardless whether
    # the container can access the open internet or not, redirect all
    # GRIST_DOMAIN requests to Traefik, which can then apply its
    # redirect rules.
    #
    # This way, all Docker services are on the same external URL, but
    # will use the internal Docker network when talking to each other.
    links:
      - "traefik:${GRIST_DOMAIN}"
    profiles:
      - default


  dex:
    restart: always
    container_name: dex
    image: dexidp/dex:latest
    user: "${USERID}:${GROUPID}"
    volumes:
      - ./config/dex.yaml:/etc/dex/config.docker.yaml
      - ./persist:/persist
      - ${SECRETS_DIR}/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt
    environment:
      APP_HOME_URL: ${APP_HOME_URL}
      GRIST_OIDC_IDP_CLIENT_ID: ${GRIST_OIDC_IDP_CLIENT_ID}
      GRIST_OIDC_IDP_CLIENT_SECRET: ${GRIST_OIDC_IDP_CLIENT_SECRET}
      DEX_CLIENT_SECRET: ${DEX_CLIENT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      MICROSOFT_CLIENT_ID: ${MICROSOFT_CLIENT_ID}
      MICROSOFT_CLIENT_SECRET: ${MICROSOFT_CLIENT_SECRET}
    depends_on:
      authelia:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://127.0.0.1:5556/dex/healthz"]
      interval: 5s
      timeout: 120s
      retries: 60
    # See note above on `links` on the Grist service
    links:
      - "traefik:${GRIST_DOMAIN}"
    profiles:
      - default

  # This service is needed because the traefik container itself
  # doesn't have an openssl command, so we use this sidecar service
  # with openssl to run the health check. We need this check to
  # succeed to make sure we can do HTTPS requests with Let's Encrypt,
  # which takes a while to initialise.
  traefik-healthcheck:
    container_name: traefik-healthcheck
    image: alpine/openssl
    depends_on:
      traefik:
        condition: service_started
    # Keep this service running forever so other services. can depend
    # on it being alive and replying to health checks.
    entrypoint: ["/bin/sh", "-c", "while true; do sleep 60; done"]
    healthcheck:
      # Traefik is healthy once it's able to issue a non-default,
      # non-issued-by-traefik TLS cert.
      test:
        - "CMD"
        - "sh"
        - "-c"
        # This pipeline with `grep -v` at the end will return 0
        # (success) if there is no match, i.e. no "traefik" in the
        # cert issuer's name.
        #
        # Also note we connect to the traefik container but specify
        # the Grist Domain in order to coax Traefik to give us the
        # relevant cert.
        - >
          openssl s_client -showcerts -connect traefik:443
          -servername ${GRIST_DOMAIN} 2>/dev/null </dev/null
          | openssl x509 -noout -issuer | grep issuer | grep -v -i traefik
      interval: 5s
      timeout: 120s
      retries: 60

  authelia:
    container_name: authelia
    image: authelia/authelia:4
    user: "${USERID}:${GROUPID}"
    secrets:
      - HMAC_SECRET
      - JWT_SECRET
      - JWT_PRIVATE_KEY
      - DEX_CLIENT_SECRET_DIGEST
      - SESSION_SECRET
      - STORAGE_ENCRYPTION_KEY
    environment:
      AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET_FILE: '/run/secrets/JWT_SECRET'
      AUTHELIA_SESSION_SECRET_FILE: '/run/secrets/SESSION_SECRET'
      AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE: '/run/secrets/STORAGE_ENCRYPTION_KEY'
      HMAC_SECRET_FILE: '/run/secrets/HMAC_SECRET'
      JWT_PRIVATE_KEY_FILE: '/run/secrets/JWT_PRIVATE_KEY'
      # Domain Grist is hosted at. Custom variable that's interpolated into the Authelia config
      APP_DOMAIN: ${GRIST_DOMAIN}
      # Where Authelia should redirect to after successful authentication.
      DEX_OAUTH_CALLBACK_URL: '${APP_HOME_URL}/dex/callback'
      # Hash of the client secret provided to Dex.
      DEX_CLIENT_SECRET_DIGEST_FILE: "/run/secrets/DEX_CLIENT_SECRET_DIGEST"
    depends_on:
      traefik-healthcheck:
        condition: service_healthy
    volumes:
      - ./config/authelia/configuration.yml:/config/configuration.yml
      - ${PERSIST_DIR}/users_database.yml:/config/users_database.yml
      - ${PERSIST_DIR}/authelia:/persist
      - ${SECRETS_DIR}/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt
    command:
      - 'authelia'
      - '--config=/config/configuration.yml'
      # Enables templating in the config file
      - '--config.experimental.filters=template'
    # See note above on `links` on the Grist service
    links:
      - "traefik:${GRIST_DOMAIN}"
    profiles:
      - default
