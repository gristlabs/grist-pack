#!/bin/bash
set -e

# Helper script to securely generate random secrets for Authelia.

CONFIG_DIR=$(realpath $(dirname $0)/../config)
ENV_DIR=$(realpath $CONFIG_DIR/..)

# Setup skeleton destination files
rm -rf "$CONFIG_DIR/secrets"
mkdir -p "$CONFIG_DIR/secrets/certs"
mkdir -p "$ENV_DIR/persist"
cp "$CONFIG_DIR/env-template" "$ENV_DIR/.env"

# Parses an Authelia generated secret for the value
function getSecret {
  cut -d ":" -f 2 <<< "$1" | tr -d '[:blank:]'
}

function generateSecureString {
  getSecret "$(docker run authelia/authelia:4 authelia crypto rand --charset=rfc3986 --length="$1")"
}

generateSecureString 128 > "$CONFIG_DIR/secrets/HMAC_SECRET"
generateSecureString 128 > "$CONFIG_DIR/secrets/JWT_SECRET"
generateSecureString 128 > "$CONFIG_DIR/secrets/SESSION_SECRET"
generateSecureString 128 > "$CONFIG_DIR/secrets/STORAGE_ENCRYPTION_KEY"
GRIST_OIDC_IDP_CLIENT_ID=$(generateSecureString 64)
GRIST_OIDC_IDP_CLIENT_SECRET=$(generateSecureString 64)

# Generates the OIDC secret key for the Dex client
CLIENT_SECRET_OUTPUT="$(docker run authelia/authelia:4 authelia crypto hash generate pbkdf2 --variant sha512 --random --random.length 72 --random.charset rfc3986)"
DEX_CLIENT_SECRET=$(getSecret "$(grep 'Password' <<< $CLIENT_SECRET_OUTPUT)")

sed -i "s/UID=\$/UID=$(id -u)/g" "$ENV_DIR/.env"
sed -i "s/GID=\$/GID=$(id -g)/g" "$ENV_DIR/.env"
sed -i "s/GRIST_OIDC_IDP_CLIENT_ID=\$/GRIST_OIDC_IDP_CLIENT_ID=${GRIST_OIDC_IDP_CLIENT_ID}/" "$ENV_DIR/.env"
sed -i "s/GRIST_OIDC_IDP_CLIENT_SECRET=\$/GRIST_OIDC_IDP_CLIENT_SECRET=${GRIST_OIDC_IDP_CLIENT_SECRET}/" "$ENV_DIR/.env"

sed -i "s/DEX_CLIENT_SECRET=/DEX_CLIENT_SECRET=${DEX_CLIENT_SECRET}/" "$ENV_DIR/.env"
getSecret "$(grep 'Digest' <<< $CLIENT_SECRET_OUTPUT)" > "$CONFIG_DIR/secrets/DEX_CLIENT_SECRET_DIGEST"

# Generate JWT certificates Authelia needs for OIDC
docker run -v $CONFIG_DIR/secrets/certs:/certs -u $(id -u):$(id -g) authelia/authelia:4 authelia crypto certificate rsa generate -d /certs
