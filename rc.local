#!/bin/bash

installation_path="$HOME/grist"

# Check if gristParameters file exists and is readable
if [ ! -r "$installation_path/gristParameters" ]; then
  echo "Error: gristParameters file does not exist or is not readable."
  exit 1
fi

# Read variables from gristParameters file
set -a
source "$installation_path/gristParameters"
set +a

# Get token for accessing AWS EC2 metadata
TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600") || {
  echo "Error: Failed to get token."
  exit 1
}

# Get domain
DOMAIN=$(curl -H "X-aws-ec2-metadata-token: ${TOKEN}" http://169.254.169.254/latest/meta-data/public-hostname) || {
  echo "Error: Failed to get domain."
  exit 1
}

DEX_SCRIPT=""
# Check if ADMIN_EMAIL is set. If not, use instance name as email domain
if [ -z "$ADMIN_EMAIL" ]; then
  # Get instance name and set it as email domain
  ADMIN_EMAIL="admin@${DOMAIN}"
else
  DEX_SCRIPT="-v $installation_path/dex.yaml:/custom/dex.yaml"
fi

# Check if ADMIN_EMAIL is set. If not, use instance name as email domain
PASSWORD_OPTION=""
if [ -n "$ADMIN_EMAIL" ]; then
  PASSWORD_OPTION="-e PASSWORD=${DOMAIN}"
fi

# Check if TEAM_NAME is set. If not, throw an error
if [ -z "$TEAM_NAME" ]; then
  echo "Error: TEAM_NAME is not set."
  exit 1
fi

# Optional parameters:
# URL to the app. If it's not set, use the public URL
if [ -z "$URL" ]; then
  echo "URL is not set. Using the public URL."
  URL="
